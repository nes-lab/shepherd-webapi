[project]
name = "shepherd_server"
description = "Web-Server & -API for the Shepherd-Testbed"
keywords = ["testbed", "beaglebone", "pru", "batteryless", "energyharvesting", "solar"]

authors = [{name = "Ingmar Splitt", email = "ingmar.splitt@tu-dresden.de"},]
maintainers = [{name = "Ingmar Splitt", email = "ingmar.splitt@tu-dresden.de"},]

readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
dynamic = ["version"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Natural Language :: English"
]

requires-python = ">=3.10"
dependencies = [
    "pyaml",
    "fastapi[standard]",
    "fastapi-mail",
    "typer",
    "uvicorn[standard]",
    "pydantic[email]>=2.11.0",
    "beanie>=1.29.0",
    # "fastui",  # TODO: dead project
    # "python-secrets", # installs A LOT, not used ATM
    "passlib[bcrypt]",
    "python-jose[cryptography]",
    "shepherd_core",
    "python-decouple",
    "shepherd_herd",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pyright",
    "bcrypt", # for salt-creation
]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-click",
    "pytest-dependency",
    "pytest-timeout",
    "coverage",
]

[project.urls]
Documentation = "https://github.com/nes-lab/shepherd-webapi/blob/main/README.md"
Issues = "https://github.com/nes-lab/shepherd-webapi/issues"
Source = "https://github.com/nes-lab/shepherd-webapi"

[project.scripts]
shepherd-server = "shepherd_server.cli:cli"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
platforms = ["unix", "linux"]
package-dir = {"shepherd_server" = "./shepherd_server/"}
zip-safe = true
include-package-data = true

[tool.setuptools.package-data]
shepherd_server = [
    "**/favicon.svg",
    "**/favicon.ico",
]

[tool.setuptools.dynamic]
version = {attr = "shepherd_server.__version__"}

[tool.pyright]
root = "./"
include = []
pythonVersion = "3.10"
pythonPlatform = "All"
reportMissingParameterType = true

[tool.aliases]
test = "pytest"

[tool.pytest.ini_options]
addopts = ["-vvv"]
asyncio_mode = "auto"
testpaths = ["tests", ]
norecursedirs = ['*.egg', '*.egg-info', '.*', '_darcs', 'build', 'dist', 'venv', '.venv']
markers = [
    "timeout: limit for individual test to finish",
]

[tool.coverage.run]
source = ["shepherd_server"]
# TODO: add something like "--cov --cov-report html --cov-report term-missing --cov-fail-under 95"
